<?php
class Registration_Block_Activate extends Core_Block_Template
{
    private $_params;

    /**
     * @throws Exception
     */
    function _construct()
    {
        parent::_construct(); // TODO: Change the autogenerated stub
        $this->_params = $this->getRequest()->getParams();
    }

    /**
     * @return bool
     * @throws Exception
     */
    public function activeAccountResult()
    {
        return $this->_verifyAccount();
    }

    /**
     * @return bool
     * @throws Exception
     */
    private function _verifyAccount()
    {
        $userName = trim($this->_params['u']);
        $activateModel = $this->_getActivateModel()->loadByUsername($userName);
        $message = 'Invalid activation code!';

        if( $activateModel->getUserId() ) {
            //Still active code
            if( !$this->_getActivateModel()->isActivateCodeExpired($userName) ) {
                $userPasswordHash = $activateModel->getUserActivationHash();
                if( $this->_compareHash($userPasswordHash) ) {
                    $this->_doActivateAccount($userName);
                    $message = 'Thank you for verifying your email, your account is now active.';
                }
            }
            //Expired
            else {
                $message = 'Sorry, activation code has expired!';
            }
        }

        return $message;
    }

    /**
     * @param $userName
     * @throws Exception
     */
    private function _doActivateAccount($userName)
    {
        $this->_getActivateModel()->activateAccount($userName);
    }

    /**
     * @param $userPasswordHash
     * @return bool
     */
    private function _compareHash($userPasswordHash)
    {
        $stringGet = trim($this->_params['s']);
        $passwordHashGet = $this->_getHelper()->getEncryptor()->hash($stringGet);

        return strcmp($passwordHashGet, $userPasswordHash) == 0;
    }

    /**
     * @return Registration_Model_Activate
     * @throws Exception
     */
    private function _getActivateModel()
    {
        return Virtual::getModel('registration/activate');
    }

    /**
     * @return Core_Helper_Data|null
     */
    private function _getHelper()
    {
        return Virtual::helper('core');
    }

}//End of class